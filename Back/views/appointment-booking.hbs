<script>


    const searchParams = new URLSearchParams(window.location.search);
    let provider_id = searchParams.get('provider_id')
    //let provider_id;
    let target_date;
    let slots = [];

    // wait for the page to load
    document.addEventListener('DOMContentLoaded', function () {
        fetchProviderDetails();
        fetchReviews(provider_id);

        // listen for chanegs to the calendar-input
        document.getElementById('calendar-input').addEventListener('input', async () => {
            await setTargetDate();
            await fetchProviderOpenSlots(provider_id, target_date);
        });

    });

    async function fetchProviderDetails() {
        // Assuming the API can handle provider_id as a query for specific details
        const query = encodeURIComponent(provider_id);
        const response = await fetch(`/api/searchHealthProvidersId?query=${query}`);
        const provider = await response.json();
        if (provider) {
            renderProviderDetails(provider);
            return provider['provider_id']
        } else {
            console.log('No provider found with id:', provider_id);
        }
    }
    async function fetchProviderOpenSlots(provider_id, target_date){
        fetch(`/api/getOpenSlots?provider_id=${provider_id}&target_date=${target_date}`)
            .then(response => response.json())
            .then(data => {
                slots = data;
                renderSlots(slots);
            });
    }

    function renderProviderDetails(provider) {
        const providerDetails = document.querySelector('.provider-details');
        providerDetails.innerHTML = `
        <h2>${provider.first_name} ${provider.last_name}</h2>
        <p class="specialty">${provider.specialty}</p>
        <div class="city" style="display:flex;align-items:center:justify-content:flex-start;gap:var(--size-1);"">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#000000" viewBox="0 0 256 256"><path d="M128,64a40,40,0,1,0,40,40A40,40,0,0,0,128,64Zm0,64a24,24,0,1,1,24-24A24,24,0,0,1,128,128Zm0-112a88.1,88.1,0,0,0-88,88c0,31.4,14.51,64.68,42,96.25a254.19,254.19,0,0,0,41.45,38.3,8,8,0,0,0,9.18,0A254.19,254.19,0,0,0,174,200.25c27.45-31.57,42-64.85,42-96.25A88.1,88.1,0,0,0,128,16Zm0,206c-16.53-13-72-60.75-72-118a72,72,0,0,1,144,0C200,161.23,144.53,209,128,222Z"></path></svg>
            ${provider.city}
        </div>
    `;
    }
    function renderProviderReviews(reviews){
        const providerReviews = document.querySelector('.provider-reviews');
        let rating = reviews.ratings.total_rating / reviews.ratings.total_reviews;
        // set rating percision to 1 decimal place
        rating = rating.toFixed(1);


        console.log(rating);
        console.log(reviews);
        providerReviews.innerHTML = `
            <h2 class="rating">${rating}/5.0</h2>
            <h2>Reviews</h2>
            <div class="review-container">
                ${reviews.reviews.map(review => {
                    rating = review.rating.toFixed(1);
                    
                    return `
                        <div class="review">
                            <p class="rating">${rating}/5.0</p>
                            <p class="review-text">${review.review}</p>
                        </div>
                    `;
                }).join('')}
            </div>
        `;
    }

    function renderSlots(slots) {
        let slotContainer = document.querySelector('.slot-container');
        slotContainer.innerHTML = '';
        let html = ''
        slots.forEach(slot => {
            let local_time = new Date(slot.start_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            html += `
                <div class="slot" onclick="selectSlot(this)" data-end-time="${slot.end_time}" data-start-time="${slot.start_time}" data-slot-duration-minutes="${slot.slot_duration_minutes}"> 
                    ${local_time}
                </div>
            `;
        });
        slotContainer.innerHTML = html;
    }

    function setTargetDate() {
        target_date = document.getElementById('calendar-input').value;
    }
    function selectSlot(slot) {
        let selected = document.querySelector('.selected');
        if (selected) {
            selected.classList.remove('selected');
        }
        slot.classList.add('selected');
        showConfirmationButton();
    }
    function showConfirmationButton() {
        let button = document.getElementById("confirmation-button");
        button.style.display = "block";
    }
    function confirmAppointment() {
        let selectedSlot = document.querySelector('.selected');
        let start_time = selectedSlot.getAttribute('data-start-time');
        let end_time = selectedSlot.getAttribute('data-end-time');
        let slot_duration_minutes = selectedSlot.getAttribute('data-slot-duration-minutes');
        let local_time = selectedSlot.innerText;
        bookAppointment(provider_id, target_date, start_time, end_time, slot_duration_minutes);

        document.querySelector('#calendar-input').style.display = 'none';
        document.querySelector('.provider-details').style.display = 'none';
        document.querySelector('.slot-container').innerHTML = ``;
        document.querySelector('#confirmation-button').style.display = 'none';
    

        let confirmationMessage = document.createElement('div');
        confirmationMessage.innerHTML = `
            <h2>Appointment Confirmed</h2>
            <p>Date: ${target_date}</p>
            <p>Time: ${local_time}</p>
        `;
        document.querySelector('.slot-container').appendChild(confirmationMessage);
    }
    function bookAppointment(provider_id, target_date, start_time, end_time, slot_duration_minutes){
        // send the selected slot to the server
        let data = {
            provider_id: provider_id,
            target_date: target_date,
            start_time: start_time,
            end_time: end_time,
            slot_duration: slot_duration_minutes
        };
        let jsonData = JSON.stringify(data);
        console.log(jsonData)
        fetch('api/bookSlot', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: jsonData
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }
    function fetchReviews(provider_id){
        console.log('fetching reviews');    
        fetch(`/api/getReviews?provider_id=${provider_id}`)
            .then(response => response.json())
            .then(data => {
                renderProviderReviews(data);
            });
    }


</script>

<div class="page-container appointment-booking-page">


    <h1>Appointment Booking</h1>

    <div style="margin-top: var(--size-4);"></div>

    <div style="display: grid; grid-template-columns: 1fr 1fr">
        <div class="provider-details" >

        </div>

        <div class="provider-reviews">

        </div>

    </div>
    <div style=" width: 48rem; display:flex; flex-direction: column; align-items: center; justify-content: center; gap: var(--size-3);">
        <h2>Schedule an appointment</h2>
        <input type="date" id="calendar-input" style="width: min-content;">
    </div>
    
    <div class="slot-container">

    </div>
    <button class="std-button" id="confirmation-button" style="width: var(--size-10);" onclick="confirmAppointment()">Confirm</button>

</div>

<style>

    .provider-details{
        min-width: var(--size-13);
    }
    .provider-reviews{
        min-width: var(--size-13);
    }   

    .specialty {
        font-size: var(--size-4-5);
        font-style: italic;
    }
    .city{
        display: flex;
        align-items: center;
        justify-content: flex-start;
        gap: var(--size-1);
    }
    .rating{
        color: var(--main-color);
        font-weight: 600;
        letter-spacing: 2px;
        text-align: center;
    }
    .review{
        background-color: var(--opacity-black-3);
        padding: var(--size-1) var(--size-2);
        border-radius: var(--size-1);
    }
    .review .rating{
        text-align: start;
    }


    #confirmation-button{
        display: none;
    }
    .appointment-booking-page {
        padding: var(--size-6) var(--size-7);
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        gap: var(--size-3);
    }

    .appointment-booking-page h1 {
        color: var(--main-color);
    }

    .appointment-booking-page .wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .appointment-booking-page .container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 2rem;
        gap: 0.5rem;
    }

    .appointment-booking-page .divider {
        width: 90%;
        border: 1px solid var(--main-color);
    }

    .appointment-booking-page .slot-container {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: row;
        flex-wrap: wrap;
        max-width: var(--size-15);
        max-height: var(--size-13);
        gap: var(--size-2);
        height: 50%;
    }

    .appointment-booking-page .slot {
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--main-color);
        font-weight: 600;
        background-color: var(--white);
        border-radius: var(--size-1);
        min-width: var(--size-10);
        font-size: var(--size-4);
        padding: var(--size-2) 0;
        border: 2px solid var(--main-color);
        transition: ease-in-out 0.3s;
    }

    .appointment-booking-page .slot:hover {
        scale: 1.03;
        transition: ease-in-out 0.3s;
        cursor: pointer;
    }

    .slot:hover:nth-child(odd) {
        transform: rotate(2deg);
    }

    .slot:hover:nth-child(even) {
        transform: rotate(-2deg);
    }

    .appointment-booking-page .selected {
        background-color: var(--main-color);
        color: var(--white);
    }

    .appointment-booking-page .question {
        display: flex;
        justify-content: center;
        flex-direction: row;
        align-items: center;
        height: 100vh;
        width: 100vw;
        color: var(--std-white);
    }

    .appointment-booking-page .questionWrapper {
        display: flex;
        flex-direction: row;
    }

    .appointment-booking-page .prompt {
        font-size: var(--default-font-size);
        font-weight: var(--default-font-weight);
    }

        {
            {
            !-- .appointment-booking-page input[type="text"] {
                margin-left: 0.5rem;
                display: inline;
                background-color: transparent;
                color: var(--std-gray);
                font-size: var(--default-font-size);
                font-weight: var(--default-font-weight);
                vertical-align: middle;
                display: flex;
            }

            .appointment-booking-page input[type=text]:focus {
                outline: none;
            }

            --
        }
    }

    :root {
        --default-font-size: 2.5rem;
        --default-font-weight: bold;
    }
</style>