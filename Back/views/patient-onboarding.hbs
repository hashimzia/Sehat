
<div class="page-container">
    {{!-- <h1>Patient Onboarding</h1> --}}
    <form id="patientForm">
        <div class="form-group" style="display: none;">
            <label for="patient_id">Patient ID:</label>
            <input type="text" id="patient_id" name="patient_id" readonly required>
        </div>
        <div class="form-group" id="name-form" style="display: block;">
            <label for="name">Please tell us your name</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div class="form-group" id="email-form">
            <label for="email">Please enter your email</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div class="form-group" id="dob-form">
            <label for="dob">Date of Birth:</label>
            <input type="date" id="dob" name="dob" required>
        </div>
        <div class="form-group" id="height-form">
            <label for="height">Height (cm):</label>
            <input type="number" id="height" name="height" required>
        </div>
        <div class="form-group" id="blood-form">
            <label for="blood_group">Blood Group:</label>
            <div id="blood-form-options">
                <div class="blood-option">
                    
                </div>
            </div>
            
        </div>
        <div class="form-group" id="gender-form">
            <label for="gender">Gender:</label>
            <select id="gender" name="gender">
                <option value="Male">Male</option>
                <option value="Female">Female</option>
                <option value="Other">Other</option>
            </select>
        </div>

        <div class="thank-you">
            <h1>Thank you for registering!</h1>
            <p>Taking you to your dashboard</p>
        </div>

        {{!-- <button type="submit" class="std-button">Submit</button> --}}
        <button type="button" class="std-button" id="next-button" style="max-width: var(--size-9);padding:0;display:flex; align-items:center; justify-content: center;gap: var(--size-2); padding-top: var(--size-1); padding-bottom: var(--size-1);">
            Next
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="#FFFFFF" viewBox="0 0 256 256"><path d="M184,104v32a8,8,0,0,1-8,8H99.31l10.35,10.34a8,8,0,0,1-11.32,11.32l-24-24a8,8,0,0,1,0-11.32l24-24a8,8,0,0,1,11.32,11.32L99.31,128H168V104a8,8,0,0,1,16,0Zm48-48V200a16,16,0,0,1-16,16H40a16,16,0,0,1-16-16V56A16,16,0,0,1,40,40H216A16,16,0,0,1,232,56ZM216,200V56H40V200H216Z"></path></svg>
        </button>

    </form>
</div>
<style>

    .thank-you{
        display: none;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }
    .thank-you p{
        color: var(--alternate-color);
        font-size: var(--size-5);
        font-weight: 500;
    }

    input[type="text"], input[type=email], input[type="number"], input[type="date"]{
        color: var(--alternate-color);
        font-size: var(--size-8);
        background-color: transparent;
        border: none;
        outline: none;
        border-bottom: var(--size-1) solid var(--opacity-black-10);
    }
    input[type="text"]:focus, input[type=email]:focus, input[type="number"]:focus{
        border-bottom: var(--size-2) solid var(--main-color);
    }

    input[table="text"]::placeholder, input[type=email]::placeholder, input[type="number"]::placeholder{
        color: var(opacity-black-4);
    }

    button.std-button:hover svg {
        fill: var(--main-color);
    }

    .page-container{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: var(--size-6);
        box-sizing: border-box;
    }
    h1{
        color: var(--main-color);
    }
    .form-group {
        margin-bottom: 15px;
        display: none;
    }
    label {
        display: block;
        margin-bottom: var(--size-2);
        margin-left: var(--size-4);
        font-size: var(--size-5);
        color: var(--main-color);
        font-weight: 600;
    }
    input, select {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        border-radius: 4px;
        border: 1px solid #ccc;
    }
    button {
        padding: 10px 20px;
        background-color: #007BFF;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 10px;
    }
    #next-button{
        margin-top: var(--size-5);
    }
</style>
<script>

    const question_order = [
        "name-form",
        "email-form",
        "dob-form",
        "height-form",
        "blood-form",
        "gender-form",
    ]

    function renderSlots(slots) {
        let slotContainer = document.querySelector('.slot-container');
        slotContainer.innerHTML = '';
        let html = ''
        slots.forEach(slot => {
            html += `
                <div class="slot" onclick="selectSlot(this)" data-end-time="${slot.end_time}" data-start-time="${slot.start_time}" data-slot-duration-minutes="${slot.slot_duration_minutes}"> 
                    ${local_time}
                </div>
            `;
        });
        slotContainer.innerHTML = html;
    }


    let current_question = 0;
    document.getElementById('next-button').addEventListener('click', function() {
        current_question++;
        for (let i = 0; i < question_order.length; i++) {
            if (i === current_question) {
                document.getElementById(question_order[i]).style.display = 'block';
            } else {
                document.getElementById(question_order[i]).style.display = 'none';
            }
        }


    });

    document.getElementById('patientForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    fetch('http://localhost:5173/api/register-patient', {
            method: 'POST',
            body: JSON.stringify(Object.fromEntries(formData)),
            headers: {
                'Content-Type': 'application/json'
            },
        })
        .then(response => response.json())
        .then(data => {
            alert('Patient registered successfully');
            window.location.href = '/patient-dashboard';
        })
        .catch(error => alert('Error registering patient: ' + error));
}); // This bracket closes the addEventListener function

window.addEventListener("load", async function () {
    await Clerk.load();
    document.getElementById('patient_id').value = Clerk.user.id;
    document.getElementById('name').value = Clerk.user.fullName;
    document.getElementById('email').value = Clerk.user.emailAddresses[0].emailAddress;
    console.log(Clerk.user);
});

</script>
